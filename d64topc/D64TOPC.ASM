;D64TOPC.PRG;V1.0 BETA (20/9), ALPHA (26.9);ONE-DIRECTIONAL CABLE DISK IMAGE FILE;SENDER;STRUCTURE OF TRACK STREAM:;START SIGN (дата=$0X I /ацк=лов);TRACK .BYTE (1);SECNUM.BYTE (1);DATA  .BYTE (SECNUM*$0100);дата <> $0X - WHEN READING TRACKSECNUM   = $FAMB       = $FBSB       = $FCSTORX    = $FDSTORY    = $FEDD00     = $FFBUFOR    = $0400BUFF     = $3000         *= $0801         .WORD $080B         .WORD 1998         .BYTE $9E         .TEXT "2061"         .BYTE 0,0,0         LDA #0         STA $D020         STA $D021         LDA #$15         STA $D018         LDA #<INITX1         LDY #>INITX1         JSR $AB1E         LDA #<INITX2         LDY #>INITX2         JSR $AB1ESPCLP    LDA $DC01         CMP #$EF         BNE SPCLP         LDX #1         STX TRACK         LDX #0         STX $D011         STX $D015         JSR PCINITMAINLP   LDX #0         STX $D030         JSR $FDA3         LDA #$FF         STA $DD01         STA $DD03         JSR READTR         LDA #$FF         STA $DD03         STA $DD01         JSR $FDA3         LDA #<BUFF         STA MB         LDA #>BUFF         STA SB         LDX #0         STX $D011         INX         STX $D030         JSR PCINIT         LDA DD00         STA $DD00         LDA #0         STA $DD01         LDA $DD0D         AND #$10         BEQ *-3-2         LDA $DD00         ORA #4         STA $DD00         LDA TRACK         JSR PCOUT         LDA SECNUM         JSR PCOUT         LDY #0SEND1    LDA (MB),Y         JSR PCOUT         INY         BNE SEND1         INC SB         DEC SECNUM         BNE SEND1         ;^LDA #$FF         ;^STA $DD01         INC TRACK         LDA TRACK         CMP #36         BNE MAINLP         LDA #$1B         STA $D011         LDA #0         STA $D030         RTS;---------------------------------------PCINIT   LDA #$FF         STA $DD03         LDA $DD02         ORA #4         STA $DD02         LDA #$10         STA $DD0D         LDA $DD00         AND #$FB         STA DD00         RTSPCOUT    STA $DD01         STX STORX         STY STORY         LDA DD00         TAX         ORA #4         TAY         STX $DD00POWAI    BIT $DD0D         BEQ POWAI         STY $DD00         LDY STORY         LDX STORX         RTS;---------------------------------------INITX1   .BYTE 147,13,155         .TEXT "PC LPT <-> C64/128 USER"         .TEXT " PORT"         .BYTE 13         .TEXT "PARALLEL ONE-DIRECTIONA"         .TEXT "L CABLE DISK"         .BYTE 13         .TEXT "IMAGE (*.D64) FILE SEND"         .TEXT "ER";         .BYTE 13         .TEXT "USE D64TOPC.EXE ON YOUR"         .TEXT " PC AS RECEIVER"         .BYTE 13,13         .TEXT "FASTCODED BY MACIEJ 'YT"         .TEXT "M' WITKOWIAK"         .BYTE 13         .TEXT "IN SEPTEMBER '98"         .BYTE 13,13,0INITX2   .TEXT "AFTER END OF TRANMISSIO"         .TEXT "N USE 'SYS2061'"         .BYTE 13         .TEXT "OR 'RUN' TO TRANSFER "         .TEXT "NEXT ONE"         .BYTE 13,13,13,5         .TEXT "NOW INSERT DESIRED DISK"         .TEXT " AND PRESS SPACE"         .BYTE 0;---------------------------------------READTR   SEI         LDA #$37         STA $01         LDA #$08         STA $BA         JSR FASTMW         BCC *+4         CLI         RTS         JMP LADUJ;---------------------------------------FASTMW   LDA #$50         STA $FB         LDA #<DRV         STA $FD         LDA #$01         STA $FC         LDA #>DRV         STA $FE         LDA #<CODE+1         STA X3+1         LDA #>CODE+2         STA X3+2         JSR MEW         BCC *+7DRERROR  CLI         SEC         LDA #$80         RTS         LDA #$23         STA $DD00         BIT $DD00         BVS *-3X0       LDA #$03         STA $02X1       BIT $DD00         BVC *-3         LDY #$00X3       LDA $1000,Y         PHA         LSR A         LSR A         LSR A         LSR A         TAX         SECX4       LDA $D012         SBC #$32         BCC X5         AND #$07         BEQ X4X5       LDA #$03         STA $DD00         LDA TABKON,X         STA $DD00         LSR A         LSR A         AND #$F7         STA $DD00         PLA         AND #$0F         TAX         LDA TABKON,X         STA $DD00         LSR A         LSR A         AND #$F7         STA $DD00         LDA #$23         NOP         NOP         INY         STA $DD00         BNE X3         INC X3+2         DEC $02         BNE X1         LDA #$20         CMP $D012         BNE *-3         LDX #$0B         STX $D011         STA $DD00         CLC         RTS;---------------------------------------TABKON   .BYTE $07,$87,$27,$A7,$47,$C7         .BYTE $67,$E7         .BYTE $17,$97,$37,$B7,$57,$D7         .BYTE $77,$F7;---------------------------------------DRV      SEI         JSR $019C         LDA #$7A         STA $1802         JSR $F5E9         LDA #$03         STA $06DRV1     JSR $0173         INC $0198         DEC $06         BNE DRV1         LDA #$10         STA $1C07         NOP         JMP $0303         LDY #$00         STY $1800DRV2     LDA $1800         BNE *-3         PHP         LDA $1800         ASL A         PLP         EOR $1800         ASL A         ASL A         ASL A         NOP         NOP         NOP         EOR $1800         ASL A         NOP         NOP         NOP         EOR $1800         STA $0300,Y         INY         BNE DRV2         LDA #$08         STA $1800         RTS;---------------------------------------MEW      LDX #3LOOP     LDA $BA         JSR $FFB1         LDA #$00         STA $90         LDA #$6F         JSR $FF93         BIT $90         BPL DALEJ         SEC         RTSDALEJ    LDA #$4D         JSR $FFA8         LDA #$2D         JSR $FFA8         LDA #$57         JSR $FFA8         LDA $FB         JSR $FFA8         LDA $FC         JSR $FFA8         LDA #$20         JSR $FFA8         LDY #$00LOOP1    LDA ($FD),Y         JSR $FFA8         INY         CPY #$20         BNE LOOP1         JSR $FFAE         LDA $FB         CLC         ADC #$20         STA $FB         BCC *+4         INC $FC         LDA $FD         CLC         ADC #$20         STA $FD         BCC *+4         INC $FE         DEX         BNE LOOP;---------------------------------------MEX      LDA $BA         JSR $FFB1         LDA #$6F         JSR $FF93         LDX #$00         LDA MEX1,X  ;ZM3         JSR $FFA8         INX         CPX #$06         BNE *-9         JSR $FFAE         SEI         CLC         RTS;---------------------------------------MEX1     .TEXT "M-E"         .BYTE $50,$01TRACK    .BYTE 18;---------------------------------------GET1     LDX #$20         LDA #$00         BIT $DD00         BVC *-3         STA $DD00         INC $D020         STA $D020         LDA $DD00         LSR A         LSR A         EOR $DD00         LSR A         LSR A         EOR $DD00         LSR A         LSR A         EOR $DD00         STX $DD00         RTS;---------------------------------------GET2     LDY #$00GET3     LDX #$00         BIT $DD00         BVC *-3         STX $DD00         INC $D020         STX $D020         LDA $DD00         LSR A         LSR A         EOR $DD00         LSR A         LSR A         LDX #$20         NOP         EOR $DD00         LSR A         LSR A         EOR $DD00         STX $DD00         STA BUFOR,Y         INY         BNE GET3         LDX #$20         STX $DD00         RTS;---------------------------------------LADUJ    JSR GET1         STA SECNUM         STA $FB         BIT $FB         BMI ERRCHECKLADUJ2   JSR GET1         STA $FC         CMP #$FF         BEQ ERRCHECK         JSR GET1         STA CHECKSUM         JSR GET2         LDA #$00         TAY         EOR BUFOR,Y         INY         BNE *-4         EOR CHECKSUM         BNE ERRCHECK         LDA #>BUFF         CLC         ADC $FC         STA LADUJ4+2LADUJ3   LDA $0400,YLADUJ4   STA $1000,Y         INY         BNE LADUJ3         DEC $FB         BNE LADUJ2         BEQ NOERR;---------------------------------------ERRCHECK INC $D020         JSR NOERR         SEC         RTSNOERR    JSR $E544         LDA #$03         STA $DD00         LDA #$1B         STA $D011         CLI         CLC         RTS;---------------------------------------CHECKSUM .BYTE 0CODE     .BYTE 0;---------------------------------------         *= $0300         .OFFS CODE+1-$0300         JMP READ         LDA #$00         STA $07         LDA $0205         STA $06         BEQ READER         CMP #36         BCS READER         LDX #$05         STX $6A         LDA #$B0         JSR WAIT         BCC CNT2         LDA #$C0         JSR WAITINIT2    LDA #$B0         JSR WAIT         BCS READERCNT2     LDA #$E0         STA $00         LDA $00         BMI *-2         CMP #$02         BCS READEREND      LDY #$3A         STY $1C07         LDY #$1A         STY $1802         LDY #$01         STY $1C         RTSREADER   SEI         PHA         LDA #$FF         JSR PRG         JSR END         LDX #$00         PLA         CLI         JMP $E60A;---------------------------------------WAIT     LDX #$00WAIT3    STA $0298         JSR $D57D         CLI         JSR $D599         CMP #$02         RTS;---------------------------------------READ     JSR $C1BD         LDA $43         STA $11         JSR PRGREAD2    JSR KONWERT         DEC $11         BNE READ2         JMP $F418;---------------------------------------PRG      TAY         AND #$0F         TAX         TYA         LSR A         LSR A         LSR A   ;NYBBLE DO ь I ы         LSR A         TAY         LDA #$00  ;SYGNAL GOTWOSCI         STA $1800         LDA TABKONW,X         LDX $1800 ;CZEKAJ NA ODPOWIEDZ         BNE *-3         STA $1800 ;PO DWA BITY         ASL A     ;WYSUN NASTEPNE DWA         AND #$0A         STA $1800         LDA TABKONW,Y         STA $1800         ASL A         AND #$0A         STA $1800         LDA #$08         BIT $EA         STA $1800         RTS;---------------------------------------TABKONW  .BYTE $0F,$07,$0D,$05,$0B,$03         .BYTE $09,$01TB2      .BYTE $0E,$06,$0C,$04,$0A,$02         .BYTE $08,$00         .BYTE $FF,$0E,$0F,$07,$FF,$0A         .BYTE $0B,$03         .BYTE $FF,$FF,$0D,$05,$FF,$00         .BYTE $09,$01         .BYTE $FF,$06,$0C,$04,$FF,$02         .BYTE $08,$FF;---------------------------------------KONWERT  JSR HADER         JSR $F556K1       BVC *         CLV         LDA $1C01         TAX         LSR A         LSR A         LSR A         STA $05FF,Y         BVC *         CLV         LDA $1C01         LSR A         STA $0600,Y         TXA         STA $06FF,Y         BVC *         CLV         LDA $1C01         TAX         ROR A         LSR A         LSR A         LSR A         STA $0700,Y         BVC *         CLV         LDA $1C01         STA $0701,Y         ASL A         TXA         ROL A         AND #$1F         STA $0601,Y         BVC *         CLV         LDA $1C01         STA $0602,Y         AND #$1F         STA $0702,Y         INY         INY         INY         INY         BNE K1K2       BVC *         CLV         LDA $1C01         STA $52,Y         INY         CPY #$03         BNE K2         LDY #$00K3       LDA $06FF,Y         STA $85         LDA $0600,Y         TAX         AND #$1F         STA $0600,Y         TXA         ASL A         ASL A         ROL $85         ASL A         LDA $85         ROL A         AND #$1F         STA $06FF,Y         LDA $0701,Y         TAX         AND #$03         STA $85         TXA         LSR A         LSR A         AND #$1F         STA $0701,Y         LDA $0602,Y         ASL A         ROL $85         ASL A         ROL $85         ASL A         LDA $85         ROL A         STA $0602,Y         INY         INY         INY         INY         BNE K3         LDA $52         LSR A         LSR A         LSR A         STA $06FF         LDA $52         AND #%00000111         STA $07FF         LDA $53         ASL A         ROL $07FF         ASL A         ROL $07FF         LSR A         LSR A         LSR A         TAX         ROR $54         LDA $54         LSR A         LSR A         LSR A         TAY         LDA $F8A0,X         ORA $F8C0,Y         STA $52;---------------------------------------CHECK    LDA $1800 ;TEST SUMY KONTROLNEJ         LSR A         BCS III         LDA #$05         JMP $F969 ;ERRORIII      LDA $07         JSR PRG     ;O.K.         LDA $52     ;CHECKSUM         JSR PRG         LDY #$00    ;BEZ ZNACZNIKATR0      LDX $0700,Y         LDA #$00         STA $1800         LDA TB2,X         LDX $1800         BNE *-3         STA $1800         ASL A         AND #$0F         STA $1800         LDX $0600,Y         LDA TB2,X         STA $1800         ASL A         AND #$0F         STA $1800         LDA #$08         INY         NOP         STA $1800         BNE TR0         EOR $1C00         STA $1C00         RTS;---------------------------------------HADER    LDY #$00         STY $85         STY $C0H1       DEC $C0         BNE H2H4       JMP $F41BH2       JSR $F556         BVC *         CLV         LDA $1C01         CMP #$52         BNE H1H3       BVC *         CLV         LDA $1C01         STA $25,Y         INY         CPY #$03         BNE H3         LDA $26         AND #$0F         STA $19         LDA $27         ASL A         ROL $19         LSR A         LSR A         LSR A         TAY         LDX $19         LDA $F8A0,X         ORA $F8C0,Y         CMP $43         BCS H4         TAX         LDA $0200,X         BEQ HEND         INC $85         BPL H2         BMI H4HEND     STX $07         INC $0200,X         RTS;---------------------------------------